TYPE: int
IDENTIFIER: main
LPAREN: (
RPAREN: )
LBRACE: {
TYPE: int
IDENTIFIER: i
COMMA: ,
IDENTIFIER: k
SEMI_COLON: ;
TYPE: char *
IDENTIFIER: j
SEMI_COLON: ;
TYPE: int
IDENTIFIER: i
SEMI_COLON: ;
TYPE: char *
IDENTIFIER: k
SEMI_COLON: ;
IDENTIFIER: func
LPAREN: (
IDENTIFIER: i
COMMA: ,
IDENTIFIER: j
COMMA: ,
IDENTIFIER: k
COMMA: ,
NUMBER: 2
RELATIONAL_OPERATOR: ==
NUMBER: 2
ADD: +
NUMBER: 2
RPAREN: )
SEMI_COLON: ;
KEYWORD: if
LPAREN: (
NUMBER: 2
RELATIONAL_OPERATOR: ==
NUMBER: 2
RPAREN: )
LBRACE: {
IDENTIFIER: x
ASSIGN: =
NUMBER: 5
SEMI_COLON: ;
RBRACE: }
KEYWORD: else
LBRACE: {
IDENTIFIER: x
ASSIGN: =
NUMBER: 10
SEMI_COLON: ;
RBRACE: }
KEYWORD: return
NUMBER: 1
SEMI_COLON: ;
RBRACE: }
